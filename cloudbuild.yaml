# [START cloudbuild]

# [START Test Phase]

steps:
- name: 'python:3.7-slim'
  id: Run unit tests on the app
  entrypoint: /bin/sh
  args:
  - -c
  - |
      pip install flask
      python ./app/src/test_app.py

- name: 'alpine/helm:3.5.4'
  id: Run helm lint
  args:
  - 'lint'
  - 'charts/simple-helloworld-python-app'

- name: 'hashicorp/terraform:0.15.4'
  id: Run terraform tests
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      cd environments/dev
      terraform init || exit 1
      terraform plan || exit 1

# [END Test Phase]

# [Begin App Build Phase]

- name: 'gcr.io/cloud-builders/docker'
  id: Build container image
  entrypoint: sh
  args:
  - -c
  - |
      cd app
      docker build -t 'gcr.io/$PROJECT_ID/simple-flask-helloworld-app:$SHORT_SHA' .

- name: 'gcr.io/cloud-builders/docker'
  id: Push container to registry
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/simple-flask-helloworld-app:$SHORT_SHA'
  
# [END App Build Phase]

# [START Deployment Phase]

- name: 'hashicorp/terraform:0.15.4'
  id: Deploy GKE Cluster
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      cd environments/dev
      terraform apply -auto-approve

- name: gcr.io/cloud-builders/kubectl
  id: Configure kubectl workspace
  args:
  - 'cluster-info'
  env:
  - CLOUDSDK_CONTAINER_CLUSTER=$PROJECT_ID-cluster
  - KUBECONFIG=/workspace/.kube/config

- name: 'gcr.io/$PROJECT_ID/helm'
  id: Deploy Helm chart with patched new image
  args:
  - upgrade
  - --install
  - simple-helloworld-python-app
  - ./charts/simple-helloworld-python-app
  - --set
  - image.repository=gcr.io/$PROJECT_ID/my-app,image.tag=$COMMIT_SHA
  env:
  - KUBECONFIG=/workspace/.kube/config

# [END Deployment Phase]

# [END cloudbuild]